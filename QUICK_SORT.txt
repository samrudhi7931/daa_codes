#include<iostream>
using namespace std;
int partition(int arr[], int start, int end)
{
	int pivot = arr[start];
	int count=0;
	for(int i=start+1; i<=end; i++)
	{
		if(arr[i]<=pivot)
		count++;
	}
	int pivotIndex=start+count;
	swap(arr[pivotIndex], arr[start]);
	int i=start, j = end;
	while(i<pivotIndex && j>pivotIndex)
	{
		while(arr[i]<=pivot)
		{
			i++;
		}
		while(arr[j]>pivot)
		{
			j--;
		}
		if(i<pivotIndex && j>pivotIndex)
		{
			swap(arr[i++], arr[j--]);
		}
	}
	return pivotIndex;
}
void quicksort(int arr[], int start, int end)
{
	if(start>=end)
	{
		return;
	}
	int p=partition(arr, start, end);
	quicksort(arr, start, p-1);
	quicksort(arr, p+1, end);
}
int main()
{
	int arr[]={10, 5, 15, 8, 6, 9, 3, 12, 16};
	int n=9;
	quicksort(arr, 0, n-1);
	for(int i=0; i<n; i++)
	{
		cout<<arr[i]<<" ";
	}
	return 0;
}

